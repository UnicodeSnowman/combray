angular.module('Combray')
    .controller('AppCtrl', ['$scope', '$location', '$route', function ($scope, $location, $route) {

      var app = this;

      app.onClickCurrentStock = function () {
        $location.search('category', undefined);
        $location.search('subcategory', undefined);
        $location.search('q', undefined);
        $location.path('/current-stock');
        $route.reload();
      }

      app.onSearch = function (e, query) {
          if (e.keyCode === 13 && query) {
              $location.search('q', query);
              $location.path('/search');
              app.showSearch = false;
          }
      }

      app.onBlurEvent = function () { app.showSearch = false; };

      app.showSearch = false;
      app.onSearchClick = function (e) {
          app.showSearch = true;
      }

    }])
    .controller('HomeCtrl', ['$timeout', function ($timeout) {
      $timeout(function () {
        addthis.toolbox(".addthis_toolbox");
      }, 100);
    }])
    .controller('CurrentStockCtrl', [
        '$scope', 
        '$location', 
        '$http',
        '$filter',
        'ItemsService',
        'usSpinnerService',
        'categories',
        'items', function ($scope, $location, $http, $filter, itemsService, spinnerService, categories, items) {

      function getNumPages (numItems) {
        return Math.floor(numItems / $scope.limit);
      }
      var query = $location.search();

      $scope.page = 0;
      $scope.pageMax = getNumPages(items.length);
      $scope.limit = 12;

      $scope.next = function () { 
        $scope.page = $scope.page < $scope.pageMax ? $scope.page + 1 : $scope.page; 
      };
      $scope.previous = function () { 
        $scope.page = $scope.page != 0 ? $scope.page - 1 : $scope.page = 0; 
      };

      $scope.selectedCategory = $location.search().category;
      $scope.selectedSubcategory = $location.search().subcategory;
      $scope.showSplash = (!query.category && !query.subcategory && !query.q);

      $scope.categories = categories;
      $scope.items = items;

      $scope.onCategoryClick = function (category, subcategory) {
          $location.search('subcategory', null);
          $location.search('category', category.id);
          $scope.selectedCategory = category.id;

          if (subcategory) {
              $location.search('subcategory', subcategory.id);
              $scope.selectedSubcategory = subcategory.id;
          } else {
              angular.forEach($scope.categories, function (category) {
                category.open = false;
              });
              category.open = !category.open;
          }

          spinnerService.spin('spinner');
          itemsService.all((subcategory ? subcategory.id : undefined), category.id).then(function (res) {
              $scope.page = 0;
              $scope.pageMax = getNumPages(res.data.length)
              $scope.items = res.data;
              $scope.showSplash = false;
          })['finally'](function () {
              spinnerService.stop('spinner');
          });
      }
    }])
    .controller('CurrentStockItemCtrl', [
      '$scope', 
      '$location', 
      '$timeout',
      'item', function ($scope, $location, $timeout, item) {

      var $mainImage = angular.element('.main-image');

      $scope.onThumbClick = function (thumb) {
          $mainImage.trigger('zoom.destroy');
//          $('#addimage').load(function() { $(this).show() });
//          $('#addimage').attr('src', src[i]);
          $mainImage.find('img').attr('src', thumb.photo.main_show.url);
          $scope.current = thumb.photo;
          $mainImage.zoom({ url: $scope.current.url });
      }

      $scope.current = item.photos[0].photo;
      $mainImage.zoom({ url: $scope.current.url });
      $scope.item = item;

      $timeout(function () {
        addthis.toolbox(".addthis_toolbox");
      }, 100);
    }]);
